@use "sass:color";

@import "variables.scss";
@import "./animations.scss";
@import "./ripple.scss";
@import "./fonts.scss";

body {
  font-family: $font-family;
  background: $background-color;
  color: $text-color;
  overflow: hidden;
  margin: 0;

  ::selection {
    background: $selection-color;
  }
}

a {
  color: $text-color;
  text-decoration: none;
}

.container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100dvh;

  .text {
    font-size: $font-size;
    text-align: center;
    width: 86vw;

    &>a {
      opacity: 0;
      transition: transform $anim-time, color $anim-time;
      display: inline-block;
      animation: fadeInUnblur $anim-time forwards;
      animation-delay: $anim-time*4;
      margin-left: 8px;
      margin-right: 8px;

      &:hover {
        transform: scale(1.0333);
        color: color.scale($text-color, $lightness: $lighten-by);
      }

      &:active {
        transform: scale(1.0666);
        color: color.scale($text-color, $lightness: $lighten-by*3);
      }
    }
    
    .subcontainer {
      *:first-child {
        margin-top: $blur-amount;
      }

      *:last-child {
        margin-bottom: $blur-amount;
      }
      
      opacity: 0;
      width: 0;
      max-height: 0;
      border-radius: $border-radius;
      border: 3px solid $text-color;
      animation: lineglow $anim-time forwards;
      animation-delay: $anim-time;
      box-sizing: border-box;
      transition: max-height $anim-time;
      box-shadow: 0 0 $shadow-amount $text-color;
      margin-bottom: $margin-bottom;
    }

    .textcontainer > *, .subcontainer > * {
      margin: 0;
      height: auto;

      &:not(a) {
        animation: fadeInUnblur $anim-time forwards;
      }

      .glow {
        animation: glow $anim-time forwards;
      }

      .fadetext {
        animation: fadeInUnblur $anim-time forwards, glow $anim-time forwards;
      }
    }

    .hint {
      font-size: calc($font-size * 0.357);
    }

    @media screen and (min-width: 720px) {
      font-size: calc($font-size * 2);
    }

    @media screen and (min-width: 1280px) {
      font-size: calc($font-size * 3);
    }

    @media screen and (min-width: 1920) {
      font-size: calc($font-size * 4);
    }
  }
}

.modal {
  background: $background-color;
  border-radius: $border-radius;
  border: 3px solid $text-color;
  max-width: 500px;
  width: 0;
  max-height: 0;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  overflow: hidden;
  box-shadow: 0 0 $shadow-amount $text-color;
  
  &-close {
    font-size: 24px;
    text-align: center;
    padding: 5px;
  }

  &-backdrop.active & {
    width: 90%;
    max-height: 80%;
    animation: modalglow $anim-time forwards;
  }
  
  &-backdrop {
    display: flex;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: fade-out($text-color, 0.9);
    backdrop-filter: blur($blur-amount);
    transition: backdrop-filter $anim-time;
    justify-content: center;
    align-items: center;
    z-index: 1000;
    visibility: hidden;
    
    &.active {
      visibility: visible;
    }
  }
  
  &-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: $margin-bottom;
  }
}

.player-list {
  list-style: none;
  padding: 0;
}