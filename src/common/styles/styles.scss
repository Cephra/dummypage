@use "sass:color";

@use "variables";
@use "animations";
@use "ripple";
@use "fonts";
@use "mixins";

body {
  font-family: variables.$font-family;
  background: variables.$background-color;
  color: variables.$text-color;
  overflow: hidden;
  margin: 0;

  ::selection {
    background: variables.$selection-color;
  }
}

canvas {
  touch-action: none;
}

.btn {
  @include mixins.btn-base;
  @include mixins.btn-state-styles-color;
  
  &-transform {
    @include mixins.btn-state-styles-transform;
  }

  &-anim-staggering {
    @include mixins.btn-anim-staggering;
  }
}

.container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100dvh;

  .text {
    font-size: variables.$font-size;
    text-align: center;
    width: 90vw;

    .subcontainer {
      animation: lineglow variables.$anim-time forwards;
      animation-delay: variables.$anim-time;
      border-radius: variables.$border-radius;
      border: 3px solid variables.$text-color;
      box-shadow: 0 0 variables.$shadow-amount variables.$text-color;
      box-sizing: border-box;
      margin-bottom: variables.$margin-bottom;
      max-height: 0;
      opacity: 0;
      padding: 0;
      text-align: left;
      transition: max-height variables.$anim-time;
      width: 0;
    }

    .textcontainer > *, .subcontainer > * {
      margin: 0;
      height: auto;
      
      & > span {
        opacity: 0;

        &.show {
          opacity: 1;
        }
      }

      &:not(a) {
        animation: fadeInUnblur variables.$anim-time forwards;
      }

      .glow {
        animation: glow variables.$anim-time forwards;
      }

      .fadetext {
        animation: fadeInUnblur variables.$anim-time forwards, glow variables.$anim-time forwards;
      }
    }

    .hint {
      font-size: calc(variables.$font-size * variables.$font-size-hint-factor);
    }
    
    h1 {
      font-size: calc(variables.$font-size * variables.$font-size-subtitle-factor);
    }

    $breakpoints: (
      375: 1.0,
      576: 1.2,
      768: 1.4,
      992: 1.6,
      1200: 1.8,
      1400: 2.0
    );
    
    @each $bp, $scale in $breakpoints {
      @media screen and (min-width: #{$bp}px) {
        font-size: calc(variables.$font-size * #{$scale});
        width: auto;
        min-width: calc(variables.$box-min-width * #{$scale} * 0.6);

        .hint {
          font-size: calc(variables.$font-size * #{$scale} * variables.$font-size-hint-factor);
        }

        h1 {
          font-size: calc(variables.$font-size * variables.$font-size-subtitle-factor);
        }
      }
    }
  }
}

.modal {
  display: flex;
  flex-direction: column;
  background: variables.$background-color;
  border-radius: variables.$border-radius;
  border: 3px solid variables.$text-color;
  max-width: 500px;
  width: 0;
  max-height: 0;
  overflow: hidden;
  box-shadow: 0 0 variables.$shadow-amount variables.$text-color;
  
  &-close {
    @include mixins.btn-base;
    font-size: 24px;
    padding: 5px;

    &:hover {
        color: color.scale(variables.$text-color,
                $lightness: variables.$lighten-by);
    }
  }

  &-backdrop.active & {
    animation: modalglow variables.$anim-time forwards;
  }
  
  &-backdrop {
    display: flex;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: color.adjust(variables.$text-color, $alpha: -0.9);
    backdrop-filter: blur(variables.$blur-amount);
    transition: backdrop-filter variables.$anim-time;
    justify-content: center;
    align-items: center;
    z-index: 1000;
    visibility: hidden;
    
    &.active {
      visibility: visible;
    }
  }
  
  &-header {
    flex: 0 0 auto;
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: variables.$margin-bottom;
  }

  &-body {
    flex: 1 1 auto;
    overflow-y: auto;
  }
}

.player-list {
  list-style: none;
  padding: 0;
  
  li {
    margin-bottom: variables.$margin-bottom;

    i {
      margin-right: variables.$margin-bottom;
      min-width: 16px;
      text-align: center;
    }
  }
}